# Run
#     ansible-playbook install.yml -i telemetry.rs, -u ubuntu --key-file .ansible_key
#
---
- name: Install Substrate telemetry
  hosts: all
  vars:
    user: telemetry
    email: cert@telemetry.rs

  tasks:
    - name: Enable firewall
      become: yes
      ufw:
        state: enabled
        policy: allow

    - name: Allow OpenSSH
      become: yes
      ufw:
        rule: allow
        name: OpenSSH

    - name: Allow Nginx
      become: yes
      ufw:
        rule: allow
        name: "Nginx Full"

    - name: Deny anything except allowed
      become: yes
      ufw:
        state: enabled
        policy: deny

    - name: Create group
      become: yes
      group:
        name: '{{ user }}'
        state: present

    - name: Create user
      become: yes
      user:
        name: '{{ user }}'
        groups: '{{ user }}'
        shell: /sbin/nologin
        append: yes
        state: present

    - name: Stop services
      become: yes
      loop: [core, shard]
      ignore_errors: yes
      systemd:
        name: telemetry-{{ item }}
        state: stopped

    - name: Copy executables
      become: yes
      loop: [core, shard]
      get_url: # TODO: Replace by `copy` later
        url: https://github.com/shamilsan/telemetry.rs/releases/download/v9.0-5bff41d/telemetry_{{ item }}
        dest: /usr/local/bin
        mode: '0755'
        force: yes
        owner: root
        group: root

    - name: Copy SystemD configs
      become: yes
      loop: [core, shard]
      template:
        src: telemetry.service.j2
        dest: /etc/systemd/system/telemetry-{{ item }}.service
        owner: root
        group: root

    - name: Start services
      become: yes
      loop: [core, shard]
      systemd:
        name: telemetry-{{ item }}
        state: started
        enabled: yes
        daemon_reload: yes

    - name: Install Nginx, Certbot et al.
      become: yes
      apt:
        name: [nginx, certbot, python3-certbot-nginx]
        state: latest
        update_cache: yes

    - name: Start Nginx
      become: yes
      service:
        name: nginx
        state: started
        enabled: yes

    - name: Create WWW directory
      become: yes
      file:
        path: /var/www/{{ inventory_hostname }}
        state: directory
        owner: www-data
        group: www-data

    - name: Copy frontend
      become: yes
      unarchive:
        src: https://github.com/shamilsan/telemetry.rs/releases/download/v9.0-5bff41d/frontend-html.tar.xz
        dest: /var/www/{{ inventory_hostname }}
        remote_src: yes
        owner: www-data
        group: www-data

    - name: Copy Nginx configuration
      become: yes
      template:
        src: server-block.j2
        dest: /etc/nginx/sites-available/{{ inventory_hostname }}

    - name: Enable Nginx configuration
      become: yes
      file:
        src: /etc/nginx/sites-available/{{ inventory_hostname }}
        dest: /etc/nginx/sites-enabled/{{ inventory_hostname }}
        state: link

    - name: Reload Nginx
      become: yes
      service:
        name: nginx
        state: reloaded

    - name: Install a certificate
      become: yes
      command: >
        certbot --nginx
        -d {{ inventory_hostname }}
        -m {{ email }}
        --agree-tos --noninteractive --redirect

    - name: Reload Nginx again
      become: yes
      service:
        name: nginx
        state: reloaded

    - name: Set cron job for auto renewal
      become: yes
      cron:
        name: Renew letsencrypt
        special_time: monthly
        job: /usr/bin/certbot renew
